<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ln.mapper.AdminUserMapper">
	<resultMap id="BaseResultMap" type="com.ln.pojo.AdminUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="userName" property="username" jdbcType="VARCHAR" />
		<result column="passWord" property="password" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="realName" property="realname" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="address" property="address" jdbcType="VARCHAR" />
		<result column="isRstriction" property="isrstriction" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, userName, passWord, email, phone, realName, gender, address,
		isRstriction, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.ln.pojo.AdminUserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from Admin_User
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from Admin_User
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from Admin_User
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.ln.pojo.AdminUserExample">
		delete from Admin_User
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.ln.pojo.AdminUser">
		insert into Admin_User (id, userName, passWord,
		email, phone, realName,
		gender, address, isRstriction,
		state)
		values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{isrstriction,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.ln.pojo.AdminUser">
		insert into Admin_User
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				userName,
			</if>
			<if test="password != null">
				passWord,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="realname != null">
				realName,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="isrstriction != null">
				isRstriction,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				#{realname,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="isrstriction != null">
				#{isrstriction,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.ln.pojo.AdminUserExample"
		resultType="java.lang.Integer">
		select count(*) from Admin_User
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update Admin_User
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.username != null">
				userName = #{record.username,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				passWord = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.realname != null">
				realName = #{record.realname,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.isrstriction != null">
				isRstriction = #{record.isrstriction,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update Admin_User
		set id = #{record.id,jdbcType=INTEGER},
		userName = #{record.username,jdbcType=VARCHAR},
		passWord = #{record.password,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		realName = #{record.realname,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		isRstriction = #{record.isrstriction,jdbcType=INTEGER},
		state = #{record.state,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.ln.pojo.AdminUser">
		update Admin_User
		<set>
			<if test="username != null">
				userName = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				passWord = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="realname != null">
				realName = #{realname,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="isrstriction != null">
				isRstriction = #{isrstriction,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ln.pojo.AdminUser">
		update Admin_User
		set userName = #{username,jdbcType=VARCHAR},
		passWord = #{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		realName = #{realname,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		isRstriction = #{isrstriction,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 测试proc -->
	<select id="testBySelectProc" parameterType="java.util.HashMap"
		resultMap="BaseResultMap" statementType="CALLABLE">
       <![CDATA[
            {call proc_selectTest (
            #{id,mode=IN,jdbcType=INTEGER},
            #{isRstriction,mode=IN,jdbcType=INTEGER}
            )}
        ]]>
	</select>

	<select id="testBySetProc" parameterType="java.util.HashMap"
		resultMap="BaseResultMap" statementType="CALLABLE">
        <![CDATA[
           {#{returnValue,mode=OUT,jdbcType=INTEGER}=call dbo.proc_setTest(
              #{id,mode=IN,jdbcType=INTEGER},
              #{isRstriction,mode=IN,jdbcType=INTEGER},
              #{setValue,mode=OUT,jdbcType=INTEGER}
           )}    
       ]]>
	</select>
</mapper>